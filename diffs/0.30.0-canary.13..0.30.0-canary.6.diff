diff --git a/BlitzDiffApp/app/auth/components/LoginForm.tsx b/BlitzDiffApp/app/auth/components/LoginForm.tsx
index 8861cf009..a3a6e4b66 100644
--- a/BlitzDiffApp/app/auth/components/LoginForm.tsx
+++ b/BlitzDiffApp/app/auth/components/LoginForm.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { AuthenticationError, Link, useMutation } from "blitz"
 import { LabeledTextField } from "app/core/components/LabeledTextField"
 import { Form, FORM_ERROR } from "app/core/components/Form"
diff --git a/BlitzDiffApp/app/auth/components/SignupForm.tsx b/BlitzDiffApp/app/auth/components/SignupForm.tsx
index 7362e35d0..97fb9ab7c 100644
--- a/BlitzDiffApp/app/auth/components/SignupForm.tsx
+++ b/BlitzDiffApp/app/auth/components/SignupForm.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { useMutation } from "blitz"
 import { LabeledTextField } from "app/core/components/LabeledTextField"
 import { Form, FORM_ERROR } from "app/core/components/Form"
diff --git a/BlitzDiffApp/app/auth/mutations/login.ts b/BlitzDiffApp/app/auth/mutations/login.ts
index b155223a2..704d1f244 100644
--- a/BlitzDiffApp/app/auth/mutations/login.ts
+++ b/BlitzDiffApp/app/auth/mutations/login.ts
@@ -23,7 +23,7 @@ export default resolver.pipe(resolver.zod(Login), async ({ email, password }, ct
   // This throws an error if credentials are invalid
   const user = await authenticateUser(email, password)
 
-  await ctx.session.$create({ userId: user.id, role: user.role as Role })
+  await ctx.session.$create({ userId: user.id, roles: [user.role as Role] })
 
   return user
 })
diff --git a/BlitzDiffApp/app/auth/mutations/signup.ts b/BlitzDiffApp/app/auth/mutations/signup.ts
index 70d025ed6..f6148bbc0 100644
--- a/BlitzDiffApp/app/auth/mutations/signup.ts
+++ b/BlitzDiffApp/app/auth/mutations/signup.ts
@@ -10,6 +10,6 @@ export default resolver.pipe(resolver.zod(Signup), async ({ email, password }, c
     select: { id: true, name: true, email: true, role: true },
   })
 
-  await ctx.session.$create({ userId: user.id, role: user.role as Role })
+  await ctx.session.$create({ userId: user.id, roles: [user.role as Role] })
   return user
 })
diff --git a/BlitzDiffApp/app/auth/pages/forgot-password.tsx b/BlitzDiffApp/app/auth/pages/forgot-password.tsx
index 0d9a295ce..13710772a 100644
--- a/BlitzDiffApp/app/auth/pages/forgot-password.tsx
+++ b/BlitzDiffApp/app/auth/pages/forgot-password.tsx
@@ -42,7 +42,6 @@ const ForgotPasswordPage: BlitzPage = () => {
   )
 }
 
-ForgotPasswordPage.redirectAuthenticatedTo = "/"
 ForgotPasswordPage.getLayout = (page) => <Layout title="Forgot Your Password?">{page}</Layout>
 
 export default ForgotPasswordPage
diff --git a/BlitzDiffApp/app/auth/pages/login.tsx b/BlitzDiffApp/app/auth/pages/login.tsx
index 45e76ff56..6e18bd89a 100644
--- a/BlitzDiffApp/app/auth/pages/login.tsx
+++ b/BlitzDiffApp/app/auth/pages/login.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { useRouter, BlitzPage } from "blitz"
 import Layout from "app/core/layouts/Layout"
 import { LoginForm } from "app/auth/components/LoginForm"
@@ -7,17 +8,11 @@ const LoginPage: BlitzPage = () => {
 
   return (
     <div>
-      <LoginForm
-        onSuccess={() => {
-          const next = (router.query.next as string) ?? "/"
-          router.push(next)
-        }}
-      />
+      <LoginForm onSuccess={() => router.push("/")} />
     </div>
   )
 }
 
-LoginPage.redirectAuthenticatedTo = "/"
 LoginPage.getLayout = (page) => <Layout title="Log In">{page}</Layout>
 
 export default LoginPage
diff --git a/BlitzDiffApp/app/auth/pages/reset-password.tsx b/BlitzDiffApp/app/auth/pages/reset-password.tsx
index 405d53814..f739b0f2d 100644
--- a/BlitzDiffApp/app/auth/pages/reset-password.tsx
+++ b/BlitzDiffApp/app/auth/pages/reset-password.tsx
@@ -23,11 +23,11 @@ const ResetPasswordPage: BlitzPage = () => {
       ) : (
         <Form
           submitText="Reset Password"
-          schema={ResetPassword.omit({ token: true })}
-          initialValues={{ password: "", passwordConfirmation: "" }}
+          schema={ResetPassword}
+          initialValues={{ password: "", passwordConfirmation: "", token: query.token as string }}
           onSubmit={async (values) => {
             try {
-              await resetPasswordMutation({ ...values, token: query.token as string })
+              await resetPasswordMutation(values)
             } catch (error) {
               if (error.name === "ResetPasswordError") {
                 return {
@@ -53,7 +53,6 @@ const ResetPasswordPage: BlitzPage = () => {
   )
 }
 
-ResetPasswordPage.redirectAuthenticatedTo = "/"
 ResetPasswordPage.getLayout = (page) => <Layout title="Reset Your Password">{page}</Layout>
 
 export default ResetPasswordPage
diff --git a/BlitzDiffApp/app/auth/pages/signup.tsx b/BlitzDiffApp/app/auth/pages/signup.tsx
index ea9de9cd1..1ef9c2be2 100644
--- a/BlitzDiffApp/app/auth/pages/signup.tsx
+++ b/BlitzDiffApp/app/auth/pages/signup.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { useRouter, BlitzPage } from "blitz"
 import Layout from "app/core/layouts/Layout"
 import { SignupForm } from "app/auth/components/SignupForm"
@@ -12,7 +13,6 @@ const SignupPage: BlitzPage = () => {
   )
 }
 
-SignupPage.redirectAuthenticatedTo = "/"
 SignupPage.getLayout = (page) => <Layout title="Sign Up">{page}</Layout>
 
 export default SignupPage
diff --git a/BlitzDiffApp/app/core/components/Form.tsx b/BlitzDiffApp/app/core/components/Form.tsx
index 2951abf33..7e74e88d1 100644
--- a/BlitzDiffApp/app/core/components/Form.tsx
+++ b/BlitzDiffApp/app/core/components/Form.tsx
@@ -1,4 +1,4 @@
-import { ReactNode, PropsWithoutRef } from "react"
+import React, { ReactNode, PropsWithoutRef } from "react"
 import { Form as FinalForm, FormProps as FinalFormProps } from "react-final-form"
 import * as z from "zod"
 export { FORM_ERROR } from "final-form"
diff --git a/BlitzDiffApp/app/core/components/LabeledTextField.tsx b/BlitzDiffApp/app/core/components/LabeledTextField.tsx
index 0d8517b8c..a1235ffec 100644
--- a/BlitzDiffApp/app/core/components/LabeledTextField.tsx
+++ b/BlitzDiffApp/app/core/components/LabeledTextField.tsx
@@ -1,5 +1,5 @@
-import { forwardRef, PropsWithoutRef } from "react"
-import { useField } from "react-final-form"
+import React, {PropsWithoutRef} from "react"
+import {useField} from "react-final-form"
 
 export interface LabeledTextFieldProps extends PropsWithoutRef<JSX.IntrinsicElements["input"]> {
   /** Field name. */
@@ -11,13 +11,13 @@ export interface LabeledTextFieldProps extends PropsWithoutRef<JSX.IntrinsicElem
   outerProps?: PropsWithoutRef<JSX.IntrinsicElements["div"]>
 }
 
-export const LabeledTextField = forwardRef<HTMLInputElement, LabeledTextFieldProps>(
-  ({ name, label, outerProps, ...props }, ref) => {
+export const LabeledTextField = React.forwardRef<HTMLInputElement, LabeledTextFieldProps>(
+  ({name, label, outerProps, ...props}, ref) => {
     const {
       input,
-      meta: { touched, error, submitError, submitting },
+      meta: {touched, error, submitError, submitting},
     } = useField(name, {
-      parse: props.type === "number" ? Number : undefined,
+      parse: props.type === "number" ? Number : undefined
     })
 
     const normalizedError = Array.isArray(error) ? error.join(", ") : error || submitError
@@ -30,7 +30,7 @@ export const LabeledTextField = forwardRef<HTMLInputElement, LabeledTextFieldPro
         </label>
 
         {touched && normalizedError && (
-          <div role="alert" style={{ color: "red" }}>
+          <div role="alert" style={{color: "red"}}>
             {normalizedError}
           </div>
         )}
@@ -53,7 +53,7 @@ export const LabeledTextField = forwardRef<HTMLInputElement, LabeledTextFieldPro
         `}</style>
       </div>
     )
-  }
+  },
 )
 
 export default LabeledTextField
diff --git a/BlitzDiffApp/app/pages/index.test.tsx b/BlitzDiffApp/app/pages/index.test.tsx
index 9374c6024..66aba7111 100644
--- a/BlitzDiffApp/app/pages/index.test.tsx
+++ b/BlitzDiffApp/app/pages/index.test.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { render } from "test/utils"
 
 import Home from "./index"
diff --git a/BlitzDiffApp/app/pages/index.tsx b/BlitzDiffApp/app/pages/index.tsx
index 087d51d96..aba012d05 100644
--- a/BlitzDiffApp/app/pages/index.tsx
+++ b/BlitzDiffApp/app/pages/index.tsx
@@ -73,7 +73,9 @@ const Home: BlitzPage = () => {
         <pre>
           <code>blitz generate all project name:string</code>
         </pre>
-        <div style={{ marginBottom: "1rem" }}>(And select Yes to run prisma migrate)</div>
+        <pre>
+          <code>blitz prisma migrate dev --preview-feature</code>
+        </pre>
         <div>
           <p>
             Then <strong>restart the server</strong>
@@ -265,7 +267,6 @@ const Home: BlitzPage = () => {
   )
 }
 
-Home.suppressFirstRenderFlicker = true
 Home.getLayout = (page) => <Layout title="Home">{page}</Layout>
 
 export default Home
diff --git a/BlitzDiffApp/db/migrations/20210306002559_initial_migration/migration.sql b/BlitzDiffApp/db/migrations/20210306010756_initial_migration/migration.sql
similarity index 100%
rename from BlitzDiffApp/db/migrations/20210306002559_initial_migration/migration.sql
rename to BlitzDiffApp/db/migrations/20210306010756_initial_migration/migration.sql
diff --git a/BlitzDiffApp/package.json b/BlitzDiffApp/package.json
index 65fadbf57..735653821 100644
--- a/BlitzDiffApp/package.json
+++ b/BlitzDiffApp/package.json
@@ -10,6 +10,9 @@
     "test": "jest",
     "test:watch": "jest --watch"
   },
+  "browserslist": [
+    "defaults"
+  ],
   "prisma": {
     "schema": "db/schema.prisma"
   },
diff --git a/BlitzDiffApp/test/utils.tsx b/BlitzDiffApp/test/utils.tsx
index 6fe4d681f..856e68186 100644
--- a/BlitzDiffApp/test/utils.tsx
+++ b/BlitzDiffApp/test/utils.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { RouterContext, BlitzRouter } from "blitz"
 import { render as defaultRender } from "@testing-library/react"
 import { renderHook as defaultRenderHook } from "@testing-library/react-hooks"
diff --git a/BlitzDiffApp/types.ts b/BlitzDiffApp/types.ts
index cd9e61011..6c396af30 100644
--- a/BlitzDiffApp/types.ts
+++ b/BlitzDiffApp/types.ts
@@ -3,7 +3,7 @@ import { SimpleRolesIsAuthorized } from "@blitzjs/server"
 import { User } from "db"
 
 // Note: You should switch to Postgres and then use a DB enum for role type
-export type Role = "ADMIN" | "USER"
+type Role = "ADMIN" | "USER"
 
 declare module "blitz" {
   export interface Ctx extends DefaultCtx {
@@ -13,7 +13,7 @@ declare module "blitz" {
     isAuthorized: SimpleRolesIsAuthorized<Role>
     PublicData: {
       userId: User["id"]
-      role: Role
+      roles: Role[]
     }
   }
 }
