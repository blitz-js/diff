diff --git a/BlitzDiffApp/app/auth/auth-utils.ts b/BlitzDiffApp/app/auth/auth-utils.ts
index df23a2808..f5a851738 100644
--- a/BlitzDiffApp/app/auth/auth-utils.ts
+++ b/BlitzDiffApp/app/auth/auth-utils.ts
@@ -2,15 +2,15 @@ import { AuthenticationError } from "blitz"
 import SecurePassword from "secure-password"
 import db from "db"
 
-const SP = new SecurePassword()
+const SP = () => new SecurePassword()
 
 export const hashPassword = async (password: string) => {
-  const hashedBuffer = await SP.hash(Buffer.from(password))
+  const hashedBuffer = await SP().hash(Buffer.from(password))
   return hashedBuffer.toString("base64")
 }
 export const verifyPassword = async (hashedPassword: string, password: string) => {
   try {
-    return await SP.verify(Buffer.from(password), Buffer.from(hashedPassword, "base64"))
+    return await SP().verify(Buffer.from(password), Buffer.from(hashedPassword, "base64"))
   } catch (error) {
     console.error(error)
     return false
diff --git a/BlitzDiffApp/app/hooks/useCurrentUser.ts b/BlitzDiffApp/app/hooks/useCurrentUser.ts
index 47ebaf5ee..2938468c7 100644
--- a/BlitzDiffApp/app/hooks/useCurrentUser.ts
+++ b/BlitzDiffApp/app/hooks/useCurrentUser.ts
@@ -1,10 +1,7 @@
-import { useQuery, useSession } from "blitz"
+import { useQuery } from "blitz"
 import getCurrentUser from "app/users/queries/getCurrentUser"
 
 export const useCurrentUser = () => {
-  // We wouldn't have to useSession() here, but doing so improves perf on initial
-  // load since we can skip the getCurrentUser() request.
-  const session = useSession()
-  const [user] = useQuery(getCurrentUser, null, { enabled: !!session.userId })
-  return session.userId ? user : null
+  const [user] = useQuery(getCurrentUser, null)
+  return user
 }
