diff --git a/BlitzDiffApp/.gitignore b/BlitzDiffApp/.gitignore
index 3665bf5ce..70053f9b5 100644
--- a/BlitzDiffApp/.gitignore
+++ b/BlitzDiffApp/.gitignore
@@ -11,6 +11,7 @@ web_modules/
 /.blitz/
 /.next/
 *.sqlite
+*.sqlite-journal
 .now
 .blitz-console-history
 blitz-log.log
diff --git a/BlitzDiffApp/.npmrc b/BlitzDiffApp/.npmrc
index cffe8cdef..1b78f1c6f 100644
--- a/BlitzDiffApp/.npmrc
+++ b/BlitzDiffApp/.npmrc
@@ -1 +1,2 @@
 save-exact=true
+legacy-peer-deps=true
diff --git a/BlitzDiffApp/README.md b/BlitzDiffApp/README.md
index f1ff724d4..e269be399 100644
--- a/BlitzDiffApp/README.md
+++ b/BlitzDiffApp/README.md
@@ -9,7 +9,7 @@ This is a [Blitz.js](https://github.com/blitz-js/blitz) app.
 Run your app in the development mode.
 
 ```
-blitz start
+blitz dev
 ```
 
 Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.
@@ -47,12 +47,13 @@ Blitz comes with a powerful CLI that is designed to make development easy and fa
 ```
   blitz [COMMAND]
 
+  dev       Start a development server
   build     Create a production build
-  console   Run the Blitz console REPL
-  db        Run database commands
+  start     Start a production server
+  prisma    Run prisma commands
   generate  Generate new files for your Blitz project
+  console   Run the Blitz console REPL
   help      display help for blitz
-  start     Start a development server
   test      Run project tests
 ```
 
@@ -65,20 +66,6 @@ Here is the starting structure of your app.
 ```
 BlitzDiffApp
 ├── app/
-│   ├── core/
-│   │   ├── components/
-│   │   │   ├── Form.tsx
-│   │   │   └── LabeledTextField.tsx
-│   │   ├── hooks/
-│   │   │   └── useCurrentUser.ts
-│   │   └── layouts/
-│   │       └── Layout.tsx
-│   ├── pages/
-│   │   ├── 404.tsx
-│   │   ├── _app.tsx
-│   │   ├── _document.tsx
-│   │   ├── index.test.tsx
-│   │   └── index.tsx
 │   ├── api/
 │   ├── auth/
 │   │   ├── components/
@@ -86,13 +73,33 @@ BlitzDiffApp
 │   │   │   └── SignupForm.tsx
 │   │   ├── mutations/
 │   │   │   ├── changePassword.ts
+│   │   │   ├── forgotPassword.test.ts
+│   │   │   ├── forgotPassword.ts
 │   │   │   ├── login.ts
 │   │   │   ├── logout.ts
+│   │   │   ├── resetPassword.test.ts
+│   │   │   ├── resetPassword.ts
 │   │   │   └── signup.ts
 │   │   ├── pages/
+│   │   │   ├── forgot-password.tsx
 │   │   │   ├── login.tsx
+│   │   │   ├── reset-password.tsx
 │   │   │   └── signup.tsx
 │   │   └── validations.ts
+│   ├── core/
+│   │   ├── components/
+│   │   │   ├── Form.tsx
+│   │   │   └── LabeledTextField.tsx
+│   │   ├── hooks/
+│   │   │   └── useCurrentUser.ts
+│   │   └── layouts/
+│   │       └── Layout.tsx
+│   ├── pages/
+│   │   ├── 404.tsx
+│   │   ├── _app.tsx
+│   │   ├── _document.tsx
+│   │   ├── index.test.tsx
+│   │   └── index.tsx
 │   └── users/
 │       └── queries/
 │           └── getCurrentUser.ts
@@ -101,6 +108,8 @@ BlitzDiffApp
 │   ├── schema.prisma
 │   └── seeds.ts
 ├── integrations/
+├── mailers/
+│   └── forgotPasswordMailer.ts
 ├── public/
 │   ├── favicon.ico*
 │   └── logo.png
@@ -113,6 +122,7 @@ BlitzDiffApp
 ├── jest.config.js
 ├── package.json
 ├── tsconfig.json
+├── types.d.ts
 ├── types.ts
 └── yarn.lock
 ```
diff --git a/BlitzDiffApp/app/auth/components/LoginForm.tsx b/BlitzDiffApp/app/auth/components/LoginForm.tsx
index a3a6e4b66..8861cf009 100644
--- a/BlitzDiffApp/app/auth/components/LoginForm.tsx
+++ b/BlitzDiffApp/app/auth/components/LoginForm.tsx
@@ -1,4 +1,3 @@
-import React from "react"
 import { AuthenticationError, Link, useMutation } from "blitz"
 import { LabeledTextField } from "app/core/components/LabeledTextField"
 import { Form, FORM_ERROR } from "app/core/components/Form"
diff --git a/BlitzDiffApp/app/auth/components/SignupForm.tsx b/BlitzDiffApp/app/auth/components/SignupForm.tsx
index 97fb9ab7c..7362e35d0 100644
--- a/BlitzDiffApp/app/auth/components/SignupForm.tsx
+++ b/BlitzDiffApp/app/auth/components/SignupForm.tsx
@@ -1,4 +1,3 @@
-import React from "react"
 import { useMutation } from "blitz"
 import { LabeledTextField } from "app/core/components/LabeledTextField"
 import { Form, FORM_ERROR } from "app/core/components/Form"
diff --git a/BlitzDiffApp/app/auth/mutations/login.ts b/BlitzDiffApp/app/auth/mutations/login.ts
index 9d62a7567..b155223a2 100644
--- a/BlitzDiffApp/app/auth/mutations/login.ts
+++ b/BlitzDiffApp/app/auth/mutations/login.ts
@@ -1,6 +1,7 @@
 import { resolver, SecurePassword, AuthenticationError } from "blitz"
 import db from "db"
 import { Login } from "../validations"
+import { Role } from "types"
 
 export const authenticateUser = async (email: string, password: string) => {
   const user = await db.user.findFirst({ where: { email } })
@@ -22,7 +23,7 @@ export default resolver.pipe(resolver.zod(Login), async ({ email, password }, ct
   // This throws an error if credentials are invalid
   const user = await authenticateUser(email, password)
 
-  await ctx.session.$create({ userId: user.id, roles: [user.role] })
+  await ctx.session.$create({ userId: user.id, role: user.role as Role })
 
   return user
 })
diff --git a/BlitzDiffApp/app/auth/mutations/signup.ts b/BlitzDiffApp/app/auth/mutations/signup.ts
index 15109e632..70d025ed6 100644
--- a/BlitzDiffApp/app/auth/mutations/signup.ts
+++ b/BlitzDiffApp/app/auth/mutations/signup.ts
@@ -1,14 +1,15 @@
 import { resolver, SecurePassword } from "blitz"
 import db from "db"
 import { Signup } from "app/auth/validations"
+import { Role } from "types"
 
 export default resolver.pipe(resolver.zod(Signup), async ({ email, password }, ctx) => {
   const hashedPassword = await SecurePassword.hash(password)
   const user = await db.user.create({
-    data: { email: email.toLowerCase(), hashedPassword, role: "user" },
+    data: { email: email.toLowerCase(), hashedPassword, role: "USER" },
     select: { id: true, name: true, email: true, role: true },
   })
 
-  await ctx.session.$create({ userId: user.id, roles: [user.role] })
+  await ctx.session.$create({ userId: user.id, role: user.role as Role })
   return user
 })
diff --git a/BlitzDiffApp/app/auth/pages/forgot-password.tsx b/BlitzDiffApp/app/auth/pages/forgot-password.tsx
index 13710772a..0d9a295ce 100644
--- a/BlitzDiffApp/app/auth/pages/forgot-password.tsx
+++ b/BlitzDiffApp/app/auth/pages/forgot-password.tsx
@@ -42,6 +42,7 @@ const ForgotPasswordPage: BlitzPage = () => {
   )
 }
 
+ForgotPasswordPage.redirectAuthenticatedTo = "/"
 ForgotPasswordPage.getLayout = (page) => <Layout title="Forgot Your Password?">{page}</Layout>
 
 export default ForgotPasswordPage
diff --git a/BlitzDiffApp/app/auth/pages/login.tsx b/BlitzDiffApp/app/auth/pages/login.tsx
index 6e18bd89a..45e76ff56 100644
--- a/BlitzDiffApp/app/auth/pages/login.tsx
+++ b/BlitzDiffApp/app/auth/pages/login.tsx
@@ -1,4 +1,3 @@
-import React from "react"
 import { useRouter, BlitzPage } from "blitz"
 import Layout from "app/core/layouts/Layout"
 import { LoginForm } from "app/auth/components/LoginForm"
@@ -8,11 +7,17 @@ const LoginPage: BlitzPage = () => {
 
   return (
     <div>
-      <LoginForm onSuccess={() => router.push("/")} />
+      <LoginForm
+        onSuccess={() => {
+          const next = (router.query.next as string) ?? "/"
+          router.push(next)
+        }}
+      />
     </div>
   )
 }
 
+LoginPage.redirectAuthenticatedTo = "/"
 LoginPage.getLayout = (page) => <Layout title="Log In">{page}</Layout>
 
 export default LoginPage
diff --git a/BlitzDiffApp/app/auth/pages/reset-password.tsx b/BlitzDiffApp/app/auth/pages/reset-password.tsx
index f739b0f2d..405d53814 100644
--- a/BlitzDiffApp/app/auth/pages/reset-password.tsx
+++ b/BlitzDiffApp/app/auth/pages/reset-password.tsx
@@ -23,11 +23,11 @@ const ResetPasswordPage: BlitzPage = () => {
       ) : (
         <Form
           submitText="Reset Password"
-          schema={ResetPassword}
-          initialValues={{ password: "", passwordConfirmation: "", token: query.token as string }}
+          schema={ResetPassword.omit({ token: true })}
+          initialValues={{ password: "", passwordConfirmation: "" }}
           onSubmit={async (values) => {
             try {
-              await resetPasswordMutation(values)
+              await resetPasswordMutation({ ...values, token: query.token as string })
             } catch (error) {
               if (error.name === "ResetPasswordError") {
                 return {
@@ -53,6 +53,7 @@ const ResetPasswordPage: BlitzPage = () => {
   )
 }
 
+ResetPasswordPage.redirectAuthenticatedTo = "/"
 ResetPasswordPage.getLayout = (page) => <Layout title="Reset Your Password">{page}</Layout>
 
 export default ResetPasswordPage
diff --git a/BlitzDiffApp/app/auth/pages/signup.tsx b/BlitzDiffApp/app/auth/pages/signup.tsx
index 1ef9c2be2..ea9de9cd1 100644
--- a/BlitzDiffApp/app/auth/pages/signup.tsx
+++ b/BlitzDiffApp/app/auth/pages/signup.tsx
@@ -1,4 +1,3 @@
-import React from "react"
 import { useRouter, BlitzPage } from "blitz"
 import Layout from "app/core/layouts/Layout"
 import { SignupForm } from "app/auth/components/SignupForm"
@@ -13,6 +12,7 @@ const SignupPage: BlitzPage = () => {
   )
 }
 
+SignupPage.redirectAuthenticatedTo = "/"
 SignupPage.getLayout = (page) => <Layout title="Sign Up">{page}</Layout>
 
 export default SignupPage
diff --git a/BlitzDiffApp/app/core/components/Form.tsx b/BlitzDiffApp/app/core/components/Form.tsx
index 1e5e0f0c3..2951abf33 100644
--- a/BlitzDiffApp/app/core/components/Form.tsx
+++ b/BlitzDiffApp/app/core/components/Form.tsx
@@ -1,17 +1,18 @@
-import React, { ReactNode, PropsWithoutRef } from "react"
+import { ReactNode, PropsWithoutRef } from "react"
 import { Form as FinalForm, FormProps as FinalFormProps } from "react-final-form"
 import * as z from "zod"
 export { FORM_ERROR } from "final-form"
 
-type FormProps<S extends z.ZodType<any, any>> = {
+export interface FormProps<S extends z.ZodType<any, any>>
+  extends Omit<PropsWithoutRef<JSX.IntrinsicElements["form"]>, "onSubmit"> {
   /** All your form fields */
-  children: ReactNode
+  children?: ReactNode
   /** Text to display in the submit button */
   submitText?: string
   schema?: S
   onSubmit: FinalFormProps<z.infer<S>>["onSubmit"]
   initialValues?: FinalFormProps<z.infer<S>>["initialValues"]
-} & Omit<PropsWithoutRef<JSX.IntrinsicElements["form"]>, "onSubmit">
+}
 
 export function Form<S extends z.ZodType<any, any>>({
   children,
diff --git a/BlitzDiffApp/app/core/components/LabeledTextField.tsx b/BlitzDiffApp/app/core/components/LabeledTextField.tsx
index a1235ffec..0d8517b8c 100644
--- a/BlitzDiffApp/app/core/components/LabeledTextField.tsx
+++ b/BlitzDiffApp/app/core/components/LabeledTextField.tsx
@@ -1,5 +1,5 @@
-import React, {PropsWithoutRef} from "react"
-import {useField} from "react-final-form"
+import { forwardRef, PropsWithoutRef } from "react"
+import { useField } from "react-final-form"
 
 export interface LabeledTextFieldProps extends PropsWithoutRef<JSX.IntrinsicElements["input"]> {
   /** Field name. */
@@ -11,13 +11,13 @@ export interface LabeledTextFieldProps extends PropsWithoutRef<JSX.IntrinsicElem
   outerProps?: PropsWithoutRef<JSX.IntrinsicElements["div"]>
 }
 
-export const LabeledTextField = React.forwardRef<HTMLInputElement, LabeledTextFieldProps>(
-  ({name, label, outerProps, ...props}, ref) => {
+export const LabeledTextField = forwardRef<HTMLInputElement, LabeledTextFieldProps>(
+  ({ name, label, outerProps, ...props }, ref) => {
     const {
       input,
-      meta: {touched, error, submitError, submitting},
+      meta: { touched, error, submitError, submitting },
     } = useField(name, {
-      parse: props.type === "number" ? Number : undefined
+      parse: props.type === "number" ? Number : undefined,
     })
 
     const normalizedError = Array.isArray(error) ? error.join(", ") : error || submitError
@@ -30,7 +30,7 @@ export const LabeledTextField = React.forwardRef<HTMLInputElement, LabeledTextFi
         </label>
 
         {touched && normalizedError && (
-          <div role="alert" style={{color: "red"}}>
+          <div role="alert" style={{ color: "red" }}>
             {normalizedError}
           </div>
         )}
@@ -53,7 +53,7 @@ export const LabeledTextField = React.forwardRef<HTMLInputElement, LabeledTextFi
         `}</style>
       </div>
     )
-  },
+  }
 )
 
 export default LabeledTextField
diff --git a/BlitzDiffApp/app/pages/_app.tsx b/BlitzDiffApp/app/pages/_app.tsx
index 802e12ff4..d6f7b831e 100644
--- a/BlitzDiffApp/app/pages/_app.tsx
+++ b/BlitzDiffApp/app/pages/_app.tsx
@@ -35,7 +35,7 @@ function RootErrorFallback({ error, resetErrorBoundary }: ErrorFallbackProps) {
   } else if (error instanceof AuthorizationError) {
     return (
       <ErrorComponent
-        statusCode={(error as any).statusCode}
+        statusCode={error.statusCode}
         title="Sorry, you are not authorized to access this"
       />
     )
diff --git a/BlitzDiffApp/app/pages/index.test.tsx b/BlitzDiffApp/app/pages/index.test.tsx
index 66aba7111..9374c6024 100644
--- a/BlitzDiffApp/app/pages/index.test.tsx
+++ b/BlitzDiffApp/app/pages/index.test.tsx
@@ -1,4 +1,3 @@
-import React from "react"
 import { render } from "test/utils"
 
 import Home from "./index"
diff --git a/BlitzDiffApp/app/pages/index.tsx b/BlitzDiffApp/app/pages/index.tsx
index c04bbb66c..087d51d96 100644
--- a/BlitzDiffApp/app/pages/index.tsx
+++ b/BlitzDiffApp/app/pages/index.tsx
@@ -73,9 +73,7 @@ const Home: BlitzPage = () => {
         <pre>
           <code>blitz generate all project name:string</code>
         </pre>
-        <pre>
-          <code>blitz prisma migrate dev --preview-feature</code>
-        </pre>
+        <div style={{ marginBottom: "1rem" }}>(And select Yes to run prisma migrate)</div>
         <div>
           <p>
             Then <strong>restart the server</strong>
@@ -84,7 +82,7 @@ const Home: BlitzPage = () => {
             <code>Ctrl + c</code>
           </pre>
           <pre>
-            <code>blitz start</code>
+            <code>blitz dev</code>
           </pre>
           <p>
             and go to{" "}
@@ -267,6 +265,7 @@ const Home: BlitzPage = () => {
   )
 }
 
+Home.suppressFirstRenderFlicker = true
 Home.getLayout = (page) => <Layout title="Home">{page}</Layout>
 
 export default Home
diff --git a/BlitzDiffApp/db/migrations/20210306011232_initial_migration/migration.sql b/BlitzDiffApp/db/migrations/20210306005344_initial_migration/migration.sql
similarity index 97%
rename from BlitzDiffApp/db/migrations/20210306011232_initial_migration/migration.sql
rename to BlitzDiffApp/db/migrations/20210306005344_initial_migration/migration.sql
index 6df839c7a..0b34cc718 100644
--- a/BlitzDiffApp/db/migrations/20210306011232_initial_migration/migration.sql
+++ b/BlitzDiffApp/db/migrations/20210306005344_initial_migration/migration.sql
@@ -6,7 +6,7 @@ CREATE TABLE "User" (
     "name" TEXT,
     "email" TEXT NOT NULL,
     "hashedPassword" TEXT,
-    "role" TEXT NOT NULL DEFAULT 'user'
+    "role" TEXT NOT NULL DEFAULT 'USER'
 );
 
 -- CreateTable
diff --git a/BlitzDiffApp/db/migrations/migration_lock.toml b/BlitzDiffApp/db/migrations/migration_lock.toml
index 963afcc9a..e5e5c4705 100644
--- a/BlitzDiffApp/db/migrations/migration_lock.toml
+++ b/BlitzDiffApp/db/migrations/migration_lock.toml
@@ -1,2 +1,3 @@
 # Please do not edit this file manually
+# It should be added in your version-control system (i.e. Git)
 provider = "sqlite"
\ No newline at end of file
diff --git a/BlitzDiffApp/db/schema.prisma b/BlitzDiffApp/db/schema.prisma
index dde411b62..1ad932610 100644
--- a/BlitzDiffApp/db/schema.prisma
+++ b/BlitzDiffApp/db/schema.prisma
@@ -13,20 +13,20 @@ generator client {
 // --------------------------------------
 
 model User {
-  id             Int       @default(autoincrement()) @id
-  createdAt      DateTime  @default(now())
-  updatedAt      DateTime  @updatedAt
+  id             Int      @id @default(autoincrement())
+  createdAt      DateTime @default(now())
+  updatedAt      DateTime @updatedAt
   name           String?
-  email          String    @unique
+  email          String   @unique
   hashedPassword String?
-  role           String    @default("user")
+  role           String   @default("USER")
 
-  tokens         Token[]
-  sessions       Session[]
+  tokens   Token[]
+  sessions Session[]
 }
 
 model Session {
-  id                 Int       @default(autoincrement()) @id
+  id                 Int       @id @default(autoincrement())
   createdAt          DateTime  @default(now())
   updatedAt          DateTime  @updatedAt
   expiresAt          DateTime?
@@ -36,14 +36,14 @@ model Session {
   publicData         String?
   privateData        String?
 
-  user               User?     @relation(fields: [userId], references: [id])
-  userId             Int?
+  user   User? @relation(fields: [userId], references: [id])
+  userId Int?
 }
 
 model Token {
-  id          Int       @default(autoincrement()) @id
-  createdAt   DateTime  @default(now())
-  updatedAt   DateTime  @updatedAt
+  id          Int      @id @default(autoincrement())
+  createdAt   DateTime @default(now())
+  updatedAt   DateTime @updatedAt
   hashedToken String
   type        String
   // See note below about TokenType enum
diff --git a/BlitzDiffApp/package.json b/BlitzDiffApp/package.json
index c00d2fbf5..2bf16e494 100644
--- a/BlitzDiffApp/package.json
+++ b/BlitzDiffApp/package.json
@@ -2,16 +2,14 @@
   "name": "BlitzDiffApp",
   "version": "1.0.0",
   "scripts": {
+    "dev": "blitz dev",
+    "build": "blitz build",
     "start": "blitz start",
     "studio": "blitz prisma studio",
-    "build": "blitz build",
     "lint": "eslint --ignore-path .gitignore --ext .js,.ts,.tsx .",
     "test": "jest",
     "test:watch": "jest --watch"
   },
-  "browserslist": [
-    "defaults"
-  ],
   "prisma": {
     "schema": "db/schema.prisma"
   },
@@ -31,13 +29,13 @@
     ]
   },
   "dependencies": {
-    "@prisma/cli": "~2.15",
-    "@prisma/client": "~2.15",
-    "blitz": "0.30.0-canary.15",
+    "prisma": "~2.17",
+    "@prisma/client": "~2.17",
+    "blitz": "0.31.1",
     "react": "0.0.0-experimental-3310209d0",
     "react-dom": "0.0.0-experimental-3310209d0",
     "react-error-boundary": "3.1.1",
-    "typescript": "4.2.3",
+    "typescript": "~4.1",
     "zod": "1.11.11",
     "final-form": "4.20.2",
     "react-final-form": "6.5.2"
@@ -50,7 +48,8 @@
     "lint-staged": "10.5.4",
     "prettier": "2.2.1",
     "pretty-quick": "3.1.0",
-    "preview-email": "3.0.3"
+    "preview-email": "3.0.3",
+    "prettier-plugin-prisma": "0.4.0"
   },
   "private": true
 }
diff --git a/BlitzDiffApp/test/utils.tsx b/BlitzDiffApp/test/utils.tsx
index 856e68186..4bdf86ac3 100644
--- a/BlitzDiffApp/test/utils.tsx
+++ b/BlitzDiffApp/test/utils.tsx
@@ -1,4 +1,3 @@
-import React from "react"
 import { RouterContext, BlitzRouter } from "blitz"
 import { render as defaultRender } from "@testing-library/react"
 import { renderHook as defaultRenderHook } from "@testing-library/react-hooks"
@@ -71,6 +70,7 @@ export const mockRouter: BlitzRouter = {
   params: {},
   query: {},
   isReady: true,
+  isLocaleDomain: false,
   push: jest.fn(),
   replace: jest.fn(),
   reload: jest.fn(),
diff --git a/BlitzDiffApp/tsconfig.json b/BlitzDiffApp/tsconfig.json
index e1d2226fa..c6d5bee62 100644
--- a/BlitzDiffApp/tsconfig.json
+++ b/BlitzDiffApp/tsconfig.json
@@ -18,6 +18,6 @@
     "incremental": true,
     "tsBuildInfoFile": ".tsbuildinfo"
   },
-  "exclude": ["node_modules"],
+  "exclude": ["node_modules", "**/*.e2e.ts", "cypress"],
   "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx"]
 }
diff --git a/BlitzDiffApp/types.d.ts b/BlitzDiffApp/types.d.ts
new file mode 100644
index 000000000..d35eda64a
--- /dev/null
+++ b/BlitzDiffApp/types.d.ts
@@ -0,0 +1,8 @@
+declare module "*.module.scss" {
+  const content: { [className: string]: string }
+  export default content
+}
+declare module "*.module.css" {
+  const content: { [className: string]: string }
+  export default content
+}
diff --git a/BlitzDiffApp/types.ts b/BlitzDiffApp/types.ts
index 64bc8a6dc..cd9e61011 100644
--- a/BlitzDiffApp/types.ts
+++ b/BlitzDiffApp/types.ts
@@ -1,16 +1,19 @@
 import { DefaultCtx, SessionContext } from "blitz"
-import { simpleRolesIsAuthorized } from "@blitzjs/server"
+import { SimpleRolesIsAuthorized } from "@blitzjs/server"
 import { User } from "db"
 
+// Note: You should switch to Postgres and then use a DB enum for role type
+export type Role = "ADMIN" | "USER"
+
 declare module "blitz" {
   export interface Ctx extends DefaultCtx {
     session: SessionContext
   }
   export interface Session {
-    isAuthorized: typeof simpleRolesIsAuthorized
+    isAuthorized: SimpleRolesIsAuthorized<Role>
     PublicData: {
       userId: User["id"]
-      roles: string[]
+      role: Role
     }
   }
 }
