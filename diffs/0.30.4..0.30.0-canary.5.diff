diff --git a/BlitzDiffApp/.gitignore b/BlitzDiffApp/.gitignore
index 70053f9b5..3665bf5ce 100644
--- a/BlitzDiffApp/.gitignore
+++ b/BlitzDiffApp/.gitignore
@@ -11,7 +11,6 @@ web_modules/
 /.blitz/
 /.next/
 *.sqlite
-*.sqlite-journal
 .now
 .blitz-console-history
 blitz-log.log
diff --git a/BlitzDiffApp/README.md b/BlitzDiffApp/README.md
index e269be399..6d780988c 100644
--- a/BlitzDiffApp/README.md
+++ b/BlitzDiffApp/README.md
@@ -66,26 +66,6 @@ Here is the starting structure of your app.
 ```
 BlitzDiffApp
 ├── app/
-│   ├── api/
-│   ├── auth/
-│   │   ├── components/
-│   │   │   ├── LoginForm.tsx
-│   │   │   └── SignupForm.tsx
-│   │   ├── mutations/
-│   │   │   ├── changePassword.ts
-│   │   │   ├── forgotPassword.test.ts
-│   │   │   ├── forgotPassword.ts
-│   │   │   ├── login.ts
-│   │   │   ├── logout.ts
-│   │   │   ├── resetPassword.test.ts
-│   │   │   ├── resetPassword.ts
-│   │   │   └── signup.ts
-│   │   ├── pages/
-│   │   │   ├── forgot-password.tsx
-│   │   │   ├── login.tsx
-│   │   │   ├── reset-password.tsx
-│   │   │   └── signup.tsx
-│   │   └── validations.ts
 │   ├── core/
 │   │   ├── components/
 │   │   │   ├── Form.tsx
@@ -100,6 +80,20 @@ BlitzDiffApp
 │   │   ├── _document.tsx
 │   │   ├── index.test.tsx
 │   │   └── index.tsx
+│   ├── api/
+│   ├── auth/
+│   │   ├── components/
+│   │   │   ├── LoginForm.tsx
+│   │   │   └── SignupForm.tsx
+│   │   ├── mutations/
+│   │   │   ├── changePassword.ts
+│   │   │   ├── login.ts
+│   │   │   ├── logout.ts
+│   │   │   └── signup.ts
+│   │   ├── pages/
+│   │   │   ├── login.tsx
+│   │   │   └── signup.tsx
+│   │   └── validations.ts
 │   └── users/
 │       └── queries/
 │           └── getCurrentUser.ts
@@ -108,8 +102,6 @@ BlitzDiffApp
 │   ├── schema.prisma
 │   └── seeds.ts
 ├── integrations/
-├── mailers/
-│   └── forgotPasswordMailer.ts
 ├── public/
 │   ├── favicon.ico*
 │   └── logo.png
@@ -122,7 +114,6 @@ BlitzDiffApp
 ├── jest.config.js
 ├── package.json
 ├── tsconfig.json
-├── types.d.ts
 ├── types.ts
 └── yarn.lock
 ```
diff --git a/BlitzDiffApp/app/auth/components/LoginForm.tsx b/BlitzDiffApp/app/auth/components/LoginForm.tsx
index 8861cf009..a3a6e4b66 100644
--- a/BlitzDiffApp/app/auth/components/LoginForm.tsx
+++ b/BlitzDiffApp/app/auth/components/LoginForm.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { AuthenticationError, Link, useMutation } from "blitz"
 import { LabeledTextField } from "app/core/components/LabeledTextField"
 import { Form, FORM_ERROR } from "app/core/components/Form"
diff --git a/BlitzDiffApp/app/auth/components/SignupForm.tsx b/BlitzDiffApp/app/auth/components/SignupForm.tsx
index 7362e35d0..97fb9ab7c 100644
--- a/BlitzDiffApp/app/auth/components/SignupForm.tsx
+++ b/BlitzDiffApp/app/auth/components/SignupForm.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { useMutation } from "blitz"
 import { LabeledTextField } from "app/core/components/LabeledTextField"
 import { Form, FORM_ERROR } from "app/core/components/Form"
diff --git a/BlitzDiffApp/app/auth/mutations/login.ts b/BlitzDiffApp/app/auth/mutations/login.ts
index b155223a2..9d62a7567 100644
--- a/BlitzDiffApp/app/auth/mutations/login.ts
+++ b/BlitzDiffApp/app/auth/mutations/login.ts
@@ -1,7 +1,6 @@
 import { resolver, SecurePassword, AuthenticationError } from "blitz"
 import db from "db"
 import { Login } from "../validations"
-import { Role } from "types"
 
 export const authenticateUser = async (email: string, password: string) => {
   const user = await db.user.findFirst({ where: { email } })
@@ -23,7 +22,7 @@ export default resolver.pipe(resolver.zod(Login), async ({ email, password }, ct
   // This throws an error if credentials are invalid
   const user = await authenticateUser(email, password)
 
-  await ctx.session.$create({ userId: user.id, role: user.role as Role })
+  await ctx.session.$create({ userId: user.id, roles: [user.role] })
 
   return user
 })
diff --git a/BlitzDiffApp/app/auth/mutations/signup.ts b/BlitzDiffApp/app/auth/mutations/signup.ts
index 70d025ed6..15109e632 100644
--- a/BlitzDiffApp/app/auth/mutations/signup.ts
+++ b/BlitzDiffApp/app/auth/mutations/signup.ts
@@ -1,15 +1,14 @@
 import { resolver, SecurePassword } from "blitz"
 import db from "db"
 import { Signup } from "app/auth/validations"
-import { Role } from "types"
 
 export default resolver.pipe(resolver.zod(Signup), async ({ email, password }, ctx) => {
   const hashedPassword = await SecurePassword.hash(password)
   const user = await db.user.create({
-    data: { email: email.toLowerCase(), hashedPassword, role: "USER" },
+    data: { email: email.toLowerCase(), hashedPassword, role: "user" },
     select: { id: true, name: true, email: true, role: true },
   })
 
-  await ctx.session.$create({ userId: user.id, role: user.role as Role })
+  await ctx.session.$create({ userId: user.id, roles: [user.role] })
   return user
 })
diff --git a/BlitzDiffApp/app/auth/pages/forgot-password.tsx b/BlitzDiffApp/app/auth/pages/forgot-password.tsx
index 0d9a295ce..13710772a 100644
--- a/BlitzDiffApp/app/auth/pages/forgot-password.tsx
+++ b/BlitzDiffApp/app/auth/pages/forgot-password.tsx
@@ -42,7 +42,6 @@ const ForgotPasswordPage: BlitzPage = () => {
   )
 }
 
-ForgotPasswordPage.redirectAuthenticatedTo = "/"
 ForgotPasswordPage.getLayout = (page) => <Layout title="Forgot Your Password?">{page}</Layout>
 
 export default ForgotPasswordPage
diff --git a/BlitzDiffApp/app/auth/pages/login.tsx b/BlitzDiffApp/app/auth/pages/login.tsx
index 45e76ff56..6e18bd89a 100644
--- a/BlitzDiffApp/app/auth/pages/login.tsx
+++ b/BlitzDiffApp/app/auth/pages/login.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { useRouter, BlitzPage } from "blitz"
 import Layout from "app/core/layouts/Layout"
 import { LoginForm } from "app/auth/components/LoginForm"
@@ -7,17 +8,11 @@ const LoginPage: BlitzPage = () => {
 
   return (
     <div>
-      <LoginForm
-        onSuccess={() => {
-          const next = (router.query.next as string) ?? "/"
-          router.push(next)
-        }}
-      />
+      <LoginForm onSuccess={() => router.push("/")} />
     </div>
   )
 }
 
-LoginPage.redirectAuthenticatedTo = "/"
 LoginPage.getLayout = (page) => <Layout title="Log In">{page}</Layout>
 
 export default LoginPage
diff --git a/BlitzDiffApp/app/auth/pages/reset-password.tsx b/BlitzDiffApp/app/auth/pages/reset-password.tsx
index 405d53814..f739b0f2d 100644
--- a/BlitzDiffApp/app/auth/pages/reset-password.tsx
+++ b/BlitzDiffApp/app/auth/pages/reset-password.tsx
@@ -23,11 +23,11 @@ const ResetPasswordPage: BlitzPage = () => {
       ) : (
         <Form
           submitText="Reset Password"
-          schema={ResetPassword.omit({ token: true })}
-          initialValues={{ password: "", passwordConfirmation: "" }}
+          schema={ResetPassword}
+          initialValues={{ password: "", passwordConfirmation: "", token: query.token as string }}
           onSubmit={async (values) => {
             try {
-              await resetPasswordMutation({ ...values, token: query.token as string })
+              await resetPasswordMutation(values)
             } catch (error) {
               if (error.name === "ResetPasswordError") {
                 return {
@@ -53,7 +53,6 @@ const ResetPasswordPage: BlitzPage = () => {
   )
 }
 
-ResetPasswordPage.redirectAuthenticatedTo = "/"
 ResetPasswordPage.getLayout = (page) => <Layout title="Reset Your Password">{page}</Layout>
 
 export default ResetPasswordPage
diff --git a/BlitzDiffApp/app/auth/pages/signup.tsx b/BlitzDiffApp/app/auth/pages/signup.tsx
index ea9de9cd1..1ef9c2be2 100644
--- a/BlitzDiffApp/app/auth/pages/signup.tsx
+++ b/BlitzDiffApp/app/auth/pages/signup.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { useRouter, BlitzPage } from "blitz"
 import Layout from "app/core/layouts/Layout"
 import { SignupForm } from "app/auth/components/SignupForm"
@@ -12,7 +13,6 @@ const SignupPage: BlitzPage = () => {
   )
 }
 
-SignupPage.redirectAuthenticatedTo = "/"
 SignupPage.getLayout = (page) => <Layout title="Sign Up">{page}</Layout>
 
 export default SignupPage
diff --git a/BlitzDiffApp/app/core/components/Form.tsx b/BlitzDiffApp/app/core/components/Form.tsx
index 2951abf33..7e74e88d1 100644
--- a/BlitzDiffApp/app/core/components/Form.tsx
+++ b/BlitzDiffApp/app/core/components/Form.tsx
@@ -1,4 +1,4 @@
-import { ReactNode, PropsWithoutRef } from "react"
+import React, { ReactNode, PropsWithoutRef } from "react"
 import { Form as FinalForm, FormProps as FinalFormProps } from "react-final-form"
 import * as z from "zod"
 export { FORM_ERROR } from "final-form"
diff --git a/BlitzDiffApp/app/core/components/LabeledTextField.tsx b/BlitzDiffApp/app/core/components/LabeledTextField.tsx
index 0d8517b8c..a1235ffec 100644
--- a/BlitzDiffApp/app/core/components/LabeledTextField.tsx
+++ b/BlitzDiffApp/app/core/components/LabeledTextField.tsx
@@ -1,5 +1,5 @@
-import { forwardRef, PropsWithoutRef } from "react"
-import { useField } from "react-final-form"
+import React, {PropsWithoutRef} from "react"
+import {useField} from "react-final-form"
 
 export interface LabeledTextFieldProps extends PropsWithoutRef<JSX.IntrinsicElements["input"]> {
   /** Field name. */
@@ -11,13 +11,13 @@ export interface LabeledTextFieldProps extends PropsWithoutRef<JSX.IntrinsicElem
   outerProps?: PropsWithoutRef<JSX.IntrinsicElements["div"]>
 }
 
-export const LabeledTextField = forwardRef<HTMLInputElement, LabeledTextFieldProps>(
-  ({ name, label, outerProps, ...props }, ref) => {
+export const LabeledTextField = React.forwardRef<HTMLInputElement, LabeledTextFieldProps>(
+  ({name, label, outerProps, ...props}, ref) => {
     const {
       input,
-      meta: { touched, error, submitError, submitting },
+      meta: {touched, error, submitError, submitting},
     } = useField(name, {
-      parse: props.type === "number" ? Number : undefined,
+      parse: props.type === "number" ? Number : undefined
     })
 
     const normalizedError = Array.isArray(error) ? error.join(", ") : error || submitError
@@ -30,7 +30,7 @@ export const LabeledTextField = forwardRef<HTMLInputElement, LabeledTextFieldPro
         </label>
 
         {touched && normalizedError && (
-          <div role="alert" style={{ color: "red" }}>
+          <div role="alert" style={{color: "red"}}>
             {normalizedError}
           </div>
         )}
@@ -53,7 +53,7 @@ export const LabeledTextField = forwardRef<HTMLInputElement, LabeledTextFieldPro
         `}</style>
       </div>
     )
-  }
+  },
 )
 
 export default LabeledTextField
diff --git a/BlitzDiffApp/app/pages/index.test.tsx b/BlitzDiffApp/app/pages/index.test.tsx
index 9374c6024..66aba7111 100644
--- a/BlitzDiffApp/app/pages/index.test.tsx
+++ b/BlitzDiffApp/app/pages/index.test.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { render } from "test/utils"
 
 import Home from "./index"
diff --git a/BlitzDiffApp/app/pages/index.tsx b/BlitzDiffApp/app/pages/index.tsx
index 087d51d96..aba012d05 100644
--- a/BlitzDiffApp/app/pages/index.tsx
+++ b/BlitzDiffApp/app/pages/index.tsx
@@ -73,7 +73,9 @@ const Home: BlitzPage = () => {
         <pre>
           <code>blitz generate all project name:string</code>
         </pre>
-        <div style={{ marginBottom: "1rem" }}>(And select Yes to run prisma migrate)</div>
+        <pre>
+          <code>blitz prisma migrate dev --preview-feature</code>
+        </pre>
         <div>
           <p>
             Then <strong>restart the server</strong>
@@ -265,7 +267,6 @@ const Home: BlitzPage = () => {
   )
 }
 
-Home.suppressFirstRenderFlicker = true
 Home.getLayout = (page) => <Layout title="Home">{page}</Layout>
 
 export default Home
diff --git a/BlitzDiffApp/db/migrations/20210306000932_initial_migration/migration.sql b/BlitzDiffApp/db/migrations/20210306011014_initial_migration/migration.sql
similarity index 97%
rename from BlitzDiffApp/db/migrations/20210306000932_initial_migration/migration.sql
rename to BlitzDiffApp/db/migrations/20210306011014_initial_migration/migration.sql
index 0b34cc718..6df839c7a 100644
--- a/BlitzDiffApp/db/migrations/20210306000932_initial_migration/migration.sql
+++ b/BlitzDiffApp/db/migrations/20210306011014_initial_migration/migration.sql
@@ -6,7 +6,7 @@ CREATE TABLE "User" (
     "name" TEXT,
     "email" TEXT NOT NULL,
     "hashedPassword" TEXT,
-    "role" TEXT NOT NULL DEFAULT 'USER'
+    "role" TEXT NOT NULL DEFAULT 'user'
 );
 
 -- CreateTable
diff --git a/BlitzDiffApp/db/migrations/migration_lock.toml b/BlitzDiffApp/db/migrations/migration_lock.toml
index e5e5c4705..963afcc9a 100644
--- a/BlitzDiffApp/db/migrations/migration_lock.toml
+++ b/BlitzDiffApp/db/migrations/migration_lock.toml
@@ -1,3 +1,2 @@
 # Please do not edit this file manually
-# It should be added in your version-control system (i.e. Git)
 provider = "sqlite"
\ No newline at end of file
diff --git a/BlitzDiffApp/db/schema.prisma b/BlitzDiffApp/db/schema.prisma
index 1ad932610..dde411b62 100644
--- a/BlitzDiffApp/db/schema.prisma
+++ b/BlitzDiffApp/db/schema.prisma
@@ -13,20 +13,20 @@ generator client {
 // --------------------------------------
 
 model User {
-  id             Int      @id @default(autoincrement())
-  createdAt      DateTime @default(now())
-  updatedAt      DateTime @updatedAt
+  id             Int       @default(autoincrement()) @id
+  createdAt      DateTime  @default(now())
+  updatedAt      DateTime  @updatedAt
   name           String?
-  email          String   @unique
+  email          String    @unique
   hashedPassword String?
-  role           String   @default("USER")
+  role           String    @default("user")
 
-  tokens   Token[]
-  sessions Session[]
+  tokens         Token[]
+  sessions       Session[]
 }
 
 model Session {
-  id                 Int       @id @default(autoincrement())
+  id                 Int       @default(autoincrement()) @id
   createdAt          DateTime  @default(now())
   updatedAt          DateTime  @updatedAt
   expiresAt          DateTime?
@@ -36,14 +36,14 @@ model Session {
   publicData         String?
   privateData        String?
 
-  user   User? @relation(fields: [userId], references: [id])
-  userId Int?
+  user               User?     @relation(fields: [userId], references: [id])
+  userId             Int?
 }
 
 model Token {
-  id          Int      @id @default(autoincrement())
-  createdAt   DateTime @default(now())
-  updatedAt   DateTime @updatedAt
+  id          Int       @default(autoincrement()) @id
+  createdAt   DateTime  @default(now())
+  updatedAt   DateTime  @updatedAt
   hashedToken String
   type        String
   // See note below about TokenType enum
diff --git a/BlitzDiffApp/package.json b/BlitzDiffApp/package.json
index abd00d886..735653821 100644
--- a/BlitzDiffApp/package.json
+++ b/BlitzDiffApp/package.json
@@ -10,6 +10,9 @@
     "test": "jest",
     "test:watch": "jest --watch"
   },
+  "browserslist": [
+    "defaults"
+  ],
   "prisma": {
     "schema": "db/schema.prisma"
   },
@@ -29,9 +32,9 @@
     ]
   },
   "dependencies": {
-    "prisma": "~2.17",
-    "@prisma/client": "~2.17",
-    "blitz": "0.31.1",
+    "prisma": "~2.16",
+    "@prisma/client": "~2.16",
+    "blitz": "0.30.0-canary.15",
     "react": "0.0.0-experimental-3310209d0",
     "react-dom": "0.0.0-experimental-3310209d0",
     "react-error-boundary": "3.1.1",
diff --git a/BlitzDiffApp/test/utils.tsx b/BlitzDiffApp/test/utils.tsx
index 4bdf86ac3..856e68186 100644
--- a/BlitzDiffApp/test/utils.tsx
+++ b/BlitzDiffApp/test/utils.tsx
@@ -1,3 +1,4 @@
+import React from "react"
 import { RouterContext, BlitzRouter } from "blitz"
 import { render as defaultRender } from "@testing-library/react"
 import { renderHook as defaultRenderHook } from "@testing-library/react-hooks"
@@ -70,7 +71,6 @@ export const mockRouter: BlitzRouter = {
   params: {},
   query: {},
   isReady: true,
-  isLocaleDomain: false,
   push: jest.fn(),
   replace: jest.fn(),
   reload: jest.fn(),
diff --git a/BlitzDiffApp/types.d.ts b/BlitzDiffApp/types.d.ts
deleted file mode 100644
index d35eda64a..000000000
--- a/BlitzDiffApp/types.d.ts
+++ /dev/null
@@ -1,8 +0,0 @@
-declare module "*.module.scss" {
-  const content: { [className: string]: string }
-  export default content
-}
-declare module "*.module.css" {
-  const content: { [className: string]: string }
-  export default content
-}
diff --git a/BlitzDiffApp/types.ts b/BlitzDiffApp/types.ts
index cd9e61011..64bc8a6dc 100644
--- a/BlitzDiffApp/types.ts
+++ b/BlitzDiffApp/types.ts
@@ -1,19 +1,16 @@
 import { DefaultCtx, SessionContext } from "blitz"
-import { SimpleRolesIsAuthorized } from "@blitzjs/server"
+import { simpleRolesIsAuthorized } from "@blitzjs/server"
 import { User } from "db"
 
-// Note: You should switch to Postgres and then use a DB enum for role type
-export type Role = "ADMIN" | "USER"
-
 declare module "blitz" {
   export interface Ctx extends DefaultCtx {
     session: SessionContext
   }
   export interface Session {
-    isAuthorized: SimpleRolesIsAuthorized<Role>
+    isAuthorized: typeof simpleRolesIsAuthorized
     PublicData: {
       userId: User["id"]
-      role: Role
+      roles: string[]
     }
   }
 }
